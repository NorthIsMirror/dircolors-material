[base]
default          = none
unknown-token    = red,bold
commandseparator = magenta,bold
redirection      = magenta,bold
here-string-tri  = yellow,bold
here-string-text = blue,bold
here-string-var  = cyan,bg:black
exec-descriptor  = yellow,bold
comment          = black,bold
correct-subtle   = blue,bold,bg:black
incorrect-subtle = red,bold,bg:black
subtle-separator = bg:black,green,bold
subtle-bg        = bg:black
secondary        = material
recursive-base   = default

[command-point]
reserved-word     = yellow,bold
subcommand        = yellow,bold
alias             = green,bold
suffix-alias      = green,bold
global-alias      = green,bold
builtin           = green,bold
function          = green,bold
command           = green,bold
precommand        = green,bold,underline
hashed-command    = green,bold
single-sq-bracket = green,bold
double-sq-bracket = green,bold
double-paren      = yellow,bold

[paths]
path          = cyan,bold
pathseparator = red,bold
path-to-dir   = blue,bold
globbing      = magenta,bold
globbing-ext  = yellow,bold

[brackets]
paired-bracket  = bg:blue
bracket-level-1 = green,bold
bracket-level-2 = yellow,bold
bracket-level-3 = cyan,bold

[arguments]
single-hyphen-option   = cyan,bold
double-hyphen-option   = cyan,bold
back-quoted-argument   = none,bold
single-quoted-argument = yellow,bold
double-quoted-argument = yellow,bold
dollar-quoted-argument = yellow,bold

[in-string]
; backslash in $'...'
back-dollar-quoted-argument           = cyan,bold
; backslash or $... in "..."
back-or-dollar-double-quoted-argument = cyan,bold

[other]
variable             = cyan,bold
assign               = blue,bold
assign-array-bracket = cyan,bold
history-expansion    = blue,bold

[math]
mathvar = blue,bold
mathnum = magenta,bold
matherr = red,bold

[for-loop]
forvar = blue,bold
fornum = magenta,bold
; operator
foroper = red,bold
; separator
forsep = green,bold

[case]
case-input       = green,bold
case-parentheses = yellow,bold
case-condition   = bg:blue,none,bold
